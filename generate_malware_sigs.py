#!/usr/bin/env python3
"""
Malware Signature Generator
Generates fuzzy hashes (ssdeep) for malware samples and outputs them for EDR configuration
"""

import sys
import os
import hashlib
import subprocess

def get_ssdeep_hash(file_path):
    """Get ssdeep fuzzy hash of a file"""
    try:
        result = subprocess.run(['ssdeep', '-b', file_path], 
                              capture_output=True, text=True, check=True)
        # Parse output: format is "ssdeep,1.1--blocksize:hash:hash,filename"
        lines = result.stdout.strip().split('\n')
        if len(lines) >= 2:  # Skip header
            hash_line = lines[1]
            parts = hash_line.split(',')
            if len(parts) >= 2:
                return parts[1]  # Return the hash part
    except subprocess.CalledProcessError:
        print(f"Error: ssdeep not installed. Install with: sudo apt install ssdeep")
        sys.exit(1)
    except Exception as e:
        print(f"Error processing {file_path}: {e}")
    return None

def get_sha256(file_path):
    """Get SHA256 hash of a file"""
    sha256 = hashlib.sha256()
    with open(file_path, 'rb') as f:
        for chunk in iter(lambda: f.read(4096), b''):
            sha256.update(chunk)
    return sha256.hexdigest()

def main():
    if len(sys.argv) < 2:
        print("Usage: python3 generate_malware_sigs.py <malware_directory>")
        print("Example: python3 generate_malware_sigs.py test-malware/")
        sys.exit(1)
    
    malware_dir = sys.argv[1]
    
    if not os.path.exists(malware_dir):
        print(f"Error: Directory {malware_dir} not found")
        sys.exit(1)
    
    print("=== Malware Signature Generator ===\n")
    print(f"Scanning directory: {malware_dir}\n")
    
    signatures = []
    
    for filename in os.listdir(malware_dir):
        file_path = os.path.join(malware_dir, filename)
        
        if not os.path.isfile(file_path):
            continue
        
        print(f"Processing: {filename}")
        
        # Get hashes
        sha256 = get_sha256(file_path)
        ssdeep_hash = get_ssdeep_hash(file_path)
        
        print(f"  SHA256: {sha256}")
        print(f"  SSDeep: {ssdeep_hash}")
        print()
        
        if ssdeep_hash:
            signatures.append({
                'filename': filename,
                'sha256': sha256,
                'ssdeep': ssdeep_hash
            })
    
    print("\n=== EDR Configuration ===\n")
    print("Add these fuzzy hashes to your EDR server:")
    print("\nCurl command to add signatures:\n")
    
    for sig in signatures:
        print(f"# {sig['filename']}")
        print(f"curl -X POST http://172.16.0.2:8080/whitelist \\")
        print(f"  -H 'Content-Type: application/json' \\")
        print(f"  -d '{{\"type\": \"malware\", \"value\": \"{sig['ssdeep']}\"}}'")
        print()
    
    print("\n=== JSON Format ===\n")
    print("Or add directly to server policy:")
    print('"malware_fuzzy_hashes": [')
    for i, sig in enumerate(signatures):
        comma = ',' if i < len(signatures) - 1 else ''
        print(f'  "{sig["ssdeep"]}"{comma}  // {sig["filename"]}')
    print(']')

if __name__ == '__main__':
    main()
